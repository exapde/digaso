{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf130
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \

\b Conditions:
\b0 \
Matrix size: 25000 x 25000 (5000 x 5000 blocks)\
Number of non-zero blocks per row: 100\
Block size: 5\
Single precision\
Compier: Cray -O2\
BLAS/LAPACK: Cray\
\

\b Summary of results:
\b0 \
- Block-based BLAS implementation is extremely slow.\
- Fully in-house implementations (no prefetching) outperform row-based BLAS implementation by about 35%.\
- No differences between the two fully in-house implementations (no prefetching).\
- Prefetching improves performance of the short-fully-in-house implementation by about 20%.\
- Prefetching Hg twice is best than only once. This indicates one prefetching does not load 25 floats at once.\
- Prefetching Hg with about 4 blocks in advance seems best.\
- No prefetching in x is better than prefetching in x. Not sure why. Since the difference is small, let\'92s prefetch x just in case\'85\
}